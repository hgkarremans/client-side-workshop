{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///external commonjs \"@nestjs/common\"","webpack:///external commonjs \"@nestjs/core\"","webpack:///./src/app/app.module.ts","webpack:///external commonjs \"tslib\"","webpack:///../../libs/backend/features/src/index.ts","webpack:///../../libs/backend/features/src/lib/meal.module.ts","webpack:///../../libs/backend/features/src/lib/meal/meal.controller.ts","webpack:///../../libs/backend/features/src/lib/meal/meal.service.ts","webpack:///external commonjs \"rxjs\"","webpack:///../../libs/shared/api/src/index.ts","webpack:///../../libs/shared/api/src/lib/models/meal.interface.ts","webpack:///../../libs/shared/api/src/lib/models/user.interface.ts","webpack:///../../libs/shared/api/src/lib/models/tickets.interface.ts","webpack:///../../libs/backend/dto/src/index.ts","webpack:///../../libs/backend/dto/src/lib/dto.module.ts","webpack:///../../libs/backend/dto/src/lib/meal.dto.ts","webpack:///external commonjs \"class-validator\"","webpack:///../../libs/backend/dto/src/lib/api-response.interceptor.ts","webpack:///external commonjs \"rxjs/operators\"","webpack:///../../libs/backend/features/src/lib/backendFeatures.module.ts","webpack:///external commonjs \"@nestjs/jwt\"","webpack:///external commonjs \"@nestjs/mongoose\"","webpack:///../../libs/backend/features/src/lib/ticket/ticket.controller.ts","webpack:///../../libs/backend/features/src/lib/ticket/ticket.service.ts","webpack:///external commonjs \"mongoose\"","webpack:///../../libs/backend/features/src/lib/ticket/ticket.schema.ts","webpack:///../../libs/backend/features/src/lib/neo4j/Neo4jUser.service.ts","webpack:///external commonjs \"nest-neo4j/dist\"","webpack:///external commonjs \"bcrypt\"","webpack:///../../libs/backend/features/src/lib/neo4j/Neo4jUser.controller.ts","webpack:///./src/app/app.controller.ts","webpack:///./src/app/app.service.ts","webpack:///../../libs/shared/env/src/index.ts","webpack:///../../libs/shared/env/src/lib/environment.development.ts","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","import { Module } from '@nestjs/common';\r\nimport { MealModule } from '@avans-nx-workshop/backend/features';\r\nimport { AppController } from './app.controller';\r\nimport { AppService } from './app.service';\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\nimport { BackendFeaturesModule} from '@avans-nx-workshop/backend/features';\r\nimport { environment } from '@avans-nx-workshop/shared/util-env';\r\nimport { Neo4jModule, Neo4jScheme } from \"nest-neo4j/dist\";\r\n\r\n@Module({\r\n  imports: [MealModule, \r\n    BackendFeaturesModule, \r\n    MongooseModule.forRoot(environment.apiUrl),\r\n    Neo4jModule.forRoot({\r\n      scheme : environment.NEO4J_SCHEME as Neo4jScheme,\r\n      host: environment.NEO4J_HOST,\r\n      port: environment.NEO4J_PORT,\r\n      username: environment.NEO4J_USERNAME,\r\n      password: environment.NEO4J_PASSWORD,\r\n  }),\r\n  ],\r\n  controllers: [AppController],\r\n  providers: [AppService],\r\n})\r\nexport class AppModule {}","module.exports = require(\"tslib\");","export * from './lib/meal.module';\r\nexport * from './lib/backendFeatures.module';\r\n// export * from './lib/auth/auth.guard';\r\n","import { Module } from '@nestjs/common';\nimport { MealController } from './meal/meal.controller';\nimport { MealService } from './meal/meal.service';\n\n@Module({\n  controllers: [MealController],\n  providers: [MealService],\n  exports: [MealService],\n})\nexport class MealModule {}\n","import { Controller } from '@nestjs/common';\nimport { MealService } from './meal.service';\nimport { Get, Param, Post, Body } from '@nestjs/common';\nimport { IMeal } from '@avans-nx-workshop/shared/api';\nimport { CreateMealDto } from '@avans-nx-workshop/backend/dto';\n\n@Controller('meal')\nexport class MealController {\n    constructor(private mealService: MealService) {}\n\n    @Get('')\n    getAll(): IMeal[] {\n        return this.mealService.getAll();\n    }\n\n    @Get(':id')\n    getOne(@Param('id') id: string): IMeal {\n        return this.mealService.getOne(id);\n    }\n\n    @Post('')\n    create(@Body() data: CreateMealDto): IMeal {\n        return this.mealService.create(data);\n    }\n}\n","import { Injectable, NotFoundException } from '@nestjs/common';\nimport { IMeal } from '@avans-nx-workshop/shared/api';\nimport { BehaviorSubject } from 'rxjs';\nimport { Logger } from '@nestjs/common';\nimport { MealSort } from '@avans-nx-workshop/shared/api';\n\n@Injectable()\nexport class MealService {\n    TAG = 'MealService';\n\n    private meals$ = new BehaviorSubject<IMeal[]>([\n        {\n            id: '0',\n            title: 'Spaghetti con funghi',\n            description: 'Vega version of the famous spaghetti recipe.',\n            isVega: true,\n            sort: MealSort.Breakfast,\n            cook: \"quinn\",\n            dateServed: new Date(),\n        },\n    ]);\n\n    getAll(): IMeal[] {\n        Logger.log('getAll', this.TAG);\n        return this.meals$.value;\n    }\n\n    getOne(id: string): IMeal {\n        Logger.log(`getOne(${id})`, this.TAG);\n        const meal = this.meals$.value.find((td) => td.id === id);\n        if (!meal) {\n            throw new NotFoundException(`Meal could not be found!`);\n        }\n        return meal;\n    }\n\n    /**\n     * Update the arg signature to match the DTO, but keep the\n     * return signature - we still want to respond with the complete\n     * object\n     */\n    create(meal: Pick<IMeal, 'title' | 'description'>): IMeal {\n        Logger.log('create', this.TAG);\n        const current = this.meals$.value;\n        // Use the incoming data, a randomized ID, and a default value of `false` to create the new to-do\n        const newMeal: IMeal = {\n            ...meal,\n            id: `meal-${Math.floor(Math.random() * 10000)}`,\n            isVega: false,\n            sort: MealSort.Breakfast,\n            cook: \"quinn\",\n            dateServed: new Date(),\n        };\n        this.meals$.next([...current, newMeal]);\n        return newMeal;\n    }\n}\n","module.exports = require(\"rxjs\");","export * from './lib/models/meal.interface';\nexport * from './lib/models/user.interface';\nexport * from './lib/models/tickets.interface';\nexport * from './lib/models/api-response.interceptor';\n","import { Id } from \"./id.type\";\n\nexport enum MealSort {\n    Breakfast = 'Breakfast',\n    Lunch = 'Lunch',\n    Dinner = 'Dinner',\n    Other = 'Other'\n}\n\n// Voor nu is onze user een string; later zullen we hier een User object van maken.\ntype User = string;\n\nexport interface IMeal {\n    id: Id;\n    title: string;\n    description: string;\n    isVega: boolean;\n    dateServed: Date;\n    sort: MealSort;\n    // Naam van de persoon die de maaltijd aanmaakt en kookt.\n    cook: User;\n}\n\nexport type ICreateMeal = Pick<\n    IMeal,\n    'title' | 'description' | 'sort' | 'cook'\n>;\nexport type IUpdateMeal = Partial<Omit<IMeal, 'id'>>;\nexport type IUpsertMeal = IMeal;\n","import { Id } from \"./id.type\";\r\n\r\nexport enum UserRole {\r\n    admin = 'Admin',\r\n    editor = 'Editor',\r\n    guest = 'Guest',\r\n}\r\nexport enum UserGender {\r\n    male = 'Male',\r\n    female = 'Female',\r\n    other = 'Other',\r\n}\r\n\r\n\r\nexport interface User {\r\n    Id: Id;\r\n    firstName: string;\r\n    lastName: string;\r\n    emailAddress: string;\r\n    passwordHash: string;\r\n    dateOfBirth: Date;\r\n    role: UserRole;\r\n    gender : UserGender;\r\n    image: string;\r\n    friends: User[];\r\n    hasTransportation: boolean;\r\n    ticketsId: string[];\r\n}","import { User } from \"./user.interface\";\r\n\r\nexport enum TicketStatus {\r\n    active = 'Active',\r\n    inactive = 'Inactive',\r\n    pending = 'Pending',\r\n}\r\n\r\n\r\nexport interface ITicket {\r\n    _id: string;\r\n    title: string,\r\n    price: number;\r\n    date: Date;\r\n    status: TicketStatus;\r\n    seat: number;\r\n}","export * from './lib/dto.module';\nexport * from './lib/meal.dto';\nexport * from './lib/api-response.interceptor';\n","import { Module } from '@nestjs/common';\n\n@Module({\n  controllers: [],\n  providers: [],\n  exports: [],\n})\nexport class DtoModule {}\n","import {\n    IsNotEmpty,\n    IsString,\n    IsBoolean,\n    IsOptional,\n    IsDate\n} from 'class-validator';\nimport {\n    ICreateMeal,\n    IUpdateMeal,\n    IUpsertMeal,\n    MealSort\n} from '@avans-nx-workshop/shared/api';\n\n/**\n * Use the `Pick` utility type to extract only the properties we want for\n * new to-do items\n */\nexport class CreateMealDto implements ICreateMeal {\n    @IsString()\n    @IsNotEmpty()\n    title!: string;\n\n    @IsString()\n    @IsNotEmpty()\n    description!: string;\n\n    @IsString()\n    @IsNotEmpty()\n    sort!: MealSort;\n\n    @IsString()\n    @IsNotEmpty()\n    cook!: string;\n}\n\nexport class UpsertMealDto implements IUpsertMeal {\n    @IsString()\n    @IsNotEmpty()\n    title!: string;\n\n    @IsString()\n    @IsNotEmpty()\n    description!: string;\n\n    @IsString()\n    @IsNotEmpty()\n    id!: string;\n\n    @IsBoolean()\n    @IsNotEmpty()\n    isVega!: boolean;\n\n    @IsDate()\n    @IsNotEmpty()\n    dateServed!: Date;\n\n    @IsString()\n    @IsNotEmpty()\n    sort!: MealSort;\n\n    @IsString()\n    @IsNotEmpty()\n    cook!: string;\n}\n\nexport class UpdateMealDto implements IUpdateMeal {\n    @IsString()\n    @IsOptional()\n    title!: string;\n\n    @IsString()\n    @IsOptional()\n    description!: string;\n\n    @IsBoolean()\n    @IsOptional()\n    completed!: boolean;\n}\n","module.exports = require(\"class-validator\");","import { ApiResponse } from '@avans-nx-workshop/shared/api';\nimport {\n    Injectable,\n    NestInterceptor,\n    ExecutionContext,\n    CallHandler,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class ApiResponseInterceptor implements NestInterceptor {\n    \n    intercept(\n        context: ExecutionContext,\n        next: CallHandler\n    ): Observable<ApiResponse<unknown>> {\n        return next.handle().pipe(\n            map((results) => {\n                if (results) {\n                    return {\n                        results,\n                        info: {\n                            version: '1.0',\n                            type: results instanceof Array ? 'list' : 'object',\n                            count:\n                                results instanceof Array ? results.length : 1,\n                        },\n                    };\n                } else {\n                    return {\n                        results: undefined,\n                        info: {\n                            version: '1.0',\n                            type: 'none',\n                            count: 0,\n                        },\n                    };\n                }\n            })\n        );\n    }\n}\n","module.exports = require(\"rxjs/operators\");","import { Module } from '@nestjs/common';\r\nimport { JwtModule } from '@nestjs/jwt'; // Import JwtModule first\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\nimport { TicketController } from './ticket/ticket.controller';\r\nimport { TicketService } from './ticket/ticket.service';\r\nimport { TicketSchema } from './ticket/ticket.schema';\r\nimport { Neo4jUserService } from './neo4j/Neo4jUser.service';\r\nimport { UserController } from './neo4j/Neo4jUser.controller';\r\n\r\n@Module({\r\n  imports: [\r\n    JwtModule.register({\r\n      secret: 'yourSecretKey',\r\n      signOptions: { expiresIn: '3600s' },\r\n    }),\r\n    MongooseModule.forFeature([{ name: 'Ticket', schema: TicketSchema }]),\r\n  ],\r\n  controllers: [TicketController, UserController],\r\n  providers: [TicketService, Neo4jUserService],\r\n  exports: [TicketService, Neo4jUserService],\r\n})\r\nexport class BackendFeaturesModule {}\r\n","module.exports = require(\"@nestjs/jwt\");","module.exports = require(\"@nestjs/mongoose\");","import { Request, Response } from 'express';\r\nimport { TicketService } from './ticket.service';\r\nimport { ITicket } from '@avans-nx-workshop/shared/api';\r\nimport { Body, Controller, Delete, Get, Param, Post, Put } from '@nestjs/common';\r\n\r\n@Controller('ticket')\r\nexport class TicketController {\r\n    constructor(private ticketService: TicketService) {}\r\n\r\n    @Get('')\r\n    getTickets(): Promise<ITicket[]> {\r\n      return this.ticketService.getTickets();\r\n    }\r\n\r\n    @Get(':id')\r\n    getTicketById(@Param('id') id: string): Promise<ITicket | null> {\r\n      return this.ticketService.getTicketById(id);\r\n    }\r\n\r\n    @Post('')\r\n    addTicket(@Body() ticketData: ITicket): Promise<ITicket> {\r\n      return this.ticketService.addTicket(ticketData);\r\n    }\r\n\r\n    @Delete(':id')\r\n    deleteTicket(@Param('id') id: string): Promise<void> {\r\n      return this.ticketService.deleteTicket(id);\r\n    }\r\n\r\n    @Put(':id') \r\n    updateTicket(@Param('id') id: string, @Body() updatedTicketData: Partial<ITicket>): Promise<ITicket | null> {\r\n      return this.ticketService.updateTicket(id, updatedTicketData);\r\n    }\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport { Model } from 'mongoose';\r\nimport { Ticket, TicketDocument } from './ticket.schema';  // Import the correct types\r\n\r\n@Injectable()\r\nexport class TicketService {\r\n  constructor(@InjectModel(Ticket.name) private readonly ticketModel: Model<TicketDocument>) {}\r\n  async getTickets(): Promise<TicketDocument[]> {\r\n    console.log('getTickets aangeroepen in service backend');\r\n    return this.ticketModel.find().exec();\r\n  }\r\n  async getTicketById(id: string): Promise<Ticket | null> {\r\n    console.log(`getTicketById invoked with id: ${id}`);\r\n    return this.ticketModel.findById(id).exec();\r\n  }\r\n  async addTicket(ticketData: Ticket): Promise<Ticket> {\r\n    const createdTicket = new this.ticketModel(ticketData);\r\n    return createdTicket.save();\r\n  }\r\n\r\n  async deleteTicket(id: string): Promise<void> {\r\n    await this.ticketModel.findByIdAndDelete(id).exec();\r\n  }\r\n  async updateTicket(id: string, updatedTicketData: Partial<Ticket>): Promise<Ticket | null> {\r\n    // Find the ticket by ID and update its data\r\n    const updatedTicket = await this.ticketModel.findByIdAndUpdate(\r\n      id,\r\n      { $set: updatedTicketData },\r\n      { new: true } // Return the updated document\r\n    ).exec();\r\n  \r\n    return updatedTicket;\r\n  }\r\n  \r\n}\r\n","module.exports = require(\"mongoose\");","import {Prop, Schema, SchemaFactory} from '@nestjs/mongoose';\r\nimport {Document, Schema as MongooseSchema} from 'mongoose';\r\nimport { \r\n    ITicket,\r\n    User,\r\n    TicketStatus\r\n } from '@avans-nx-workshop/shared/api';\r\nimport { IsMongoId } from 'class-validator';\r\nexport type TicketDocument = ITicket & Document;\r\n\r\n@Schema()\r\nexport class Ticket implements ITicket {\r\n    @IsMongoId()\r\n    _id!: string;\r\n\r\n    @Prop({\r\n        required: true,\r\n        type: String\r\n    })\r\n    title!: string;\r\n\r\n    @Prop({\r\n        required: true,\r\n        type: Number\r\n    })\r\n    price!: number;\r\n\r\n    @Prop({\r\n        required: true,\r\n        type: Date\r\n    })\r\n    date!: Date;\r\n\r\n    @Prop({\r\n        required: true,\r\n        type: String,\r\n        default: TicketStatus.pending\r\n    })\r\n    status!: TicketStatus;\r\n    @Prop({\r\n        required: true,\r\n        type: Number\r\n    })\r\n    seat!: number;\r\n\r\n    \r\n}\r\nexport const TicketSchema = SchemaFactory.createForClass(Ticket);","import { Injectable } from '@nestjs/common';\r\nimport { User, UserGender, UserRole } from '@avans-nx-workshop/shared/api';\r\nimport { Logger } from '@nestjs/common';\r\nimport { Neo4jService } from 'nest-neo4j/dist';\r\nimport * as bcrypt from 'bcrypt';\r\nimport { JwtService } from '@nestjs/jwt';\r\n\r\n@Injectable()\r\nexport class Neo4jUserService {\r\n  private readonly TAG = 'Neo4jUserService';\r\n\r\n  constructor(\r\n    private readonly neo4jService: Neo4jService,\r\n    private readonly jwtService: JwtService,\r\n    ) {}\r\n\r\n  async getAll() {\r\n    Logger.log('getAll', this.TAG);\r\n\r\n    const query = `MATCH (user:User) RETURN user`;\r\n    const result = await this.neo4jService.read(query, {});\r\n\r\n    Logger.log(`result: ${JSON.stringify(result)}`);\r\n    return result?.records;\r\n  }\r\n\r\n  async getOne(Id: string) {\r\n    Logger.log(`getOne(${Id})`, this.TAG);\r\n\r\n    const query = `MATCH (n) WHERE n.Id = $Id RETURN n`;\r\n\r\n    console.log('Parameters:', { Id }); // Log the query parameters for debugging\r\n\r\n    const result = await this.neo4jService.write(query, { Id: parseInt(Id) });\r\n    console.log('Result:', result); // Log the result for debugging\r\n\r\n    return result.records;\r\n  }\r\n  async findOne(emailAddress: string): Promise<User> {\r\n    const query = `MATCH (user:User {emailAddress: $emailAddress}) RETURN user`;\r\n    const result = await this.neo4jService.read(query, { emailAddress });\r\n    return result?.records[0]?.get('user').properties;\r\n  }\r\n    \r\n\r\n  async create(newUser: User) {\r\n    Logger.log('create', this.TAG);\r\n\r\n    // Assuming you want to hash the password before storing it\r\n    const hashedPassword = await this.generateHash(newUser.passwordHash);\r\n\r\n    const query = `\r\n      MERGE (user:User {Id: $Id})\r\n      ON CREATE SET \r\n        user.firstName = $firstName,\r\n        user.lastName = $lastName, \r\n        user.image = $image,\r\n        user.emailAddress = $emailAddress,\r\n        user.dateOfBirth = $dateOfBirth,\r\n        user.gender = $gender,\r\n        user.role = $role,\r\n        user.friends = $friends,\r\n        user.hasTransportation = $hasTransportation,\r\n        user.passwordHash = $passwordHash\r\n      ON MATCH SET \r\n        user.firstName = $firstName,\r\n        user.lastName = $lastName, \r\n        user.image = $image,\r\n        user.emailAddress = $emailAddress,\r\n        user.dateOfBirth = $dateOfBirth,\r\n        user.gender = $gender,\r\n        user.role = $role,\r\n        user.friends = $friends,\r\n        user.hasTransportation = $hasTransportation,\r\n        user.passwordHash = $passwordHash\r\n      RETURN user\r\n    `;\r\n\r\n    const result = await this.neo4jService.write(query, {\r\n      Id: Math.floor(Math.random() * 10000),\r\n      firstName: newUser.firstName,\r\n      lastName: newUser.lastName,\r\n      image: newUser.image,\r\n      emailAddress: newUser.emailAddress,\r\n      dateOfBirth: newUser.dateOfBirth,\r\n      gender: newUser.gender,\r\n      role: newUser.role || UserRole.guest, // Provide a default value if not specified\r\n      friends: newUser.friends || [],\r\n      hasTransportation: newUser.hasTransportation || false, // Provide a default value if not specified\r\n      passwordHash: hashedPassword,\r\n    });\r\n\r\n    // Generate a JWT for the newly created user\r\n    const userProperties = result.records[0]?.get('user').properties;\r\n    const payload = { sub: userProperties.Id, username: userProperties.emailAddress };\r\n    const accessToken = await this.jwtService.signAsync(payload);\r\n    console.log('payload: ', payload)\r\n    console.log('accessToken:', accessToken); // Log the JWT for debugging\r\n\r\n    // Include the JWT in the response\r\n    return { user: userProperties, access_token: accessToken };\r\n  }\r\n  \r\n  \r\n\r\n  async update(Id: string, user: Pick<User, 'firstName' | 'lastName' | 'image' | 'emailAddress' | 'dateOfBirth' | 'gender' | 'role' | 'friends'>) {\r\n    Logger.log(`Update(${Id})`, this.TAG);\r\n\r\n    const query = `\r\n      MATCH (user:User {Id: $Id})\r\n      SET\r\n        user.firstName = $firstName,\r\n        user.lastName = $lastName,\r\n        user.image = $image,\r\n        user.emailAddress = $emailAddress,\r\n        user.dateOfBirth = $dateOfBirth,\r\n        user.gender = $gender,\r\n        user.role = $role,\r\n        user.friends = $friends\r\n      RETURN user\r\n    `;\r\n\r\n    const result = await this.neo4jService.write(query, {\r\n      Id: parseInt(Id),\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      image: user.image,\r\n      emailAddress: user.emailAddress,\r\n      dateOfBirth: user.dateOfBirth,\r\n      gender: user.gender,\r\n      role: user.role,\r\n      friends: user.friends || [],\r\n    });\r\n\r\n    return result.records;\r\n  }\r\n\r\n  async delete(Id: string) {\r\n    Logger.log(`Delete(${Id})`, this.TAG);\r\n\r\n    const query = `MATCH (n) WHERE n.Id = $Id DETACH DELETE n`;\r\n    const result = await this.neo4jService.write(query, { Id: parseInt(Id) });\r\n\r\n    return result;\r\n  }\r\n  async validatePassword (password: string, passwordHash: string): Promise<boolean> {\r\n    return bcrypt.compare(password, passwordHash);\r\n  }\r\n  async generateHash (password: string): Promise<string> {\r\n    return bcrypt.hash(password, 10);\r\n  }\r\n\r\n}\r\n","module.exports = require(\"nest-neo4j/dist\");","module.exports = require(\"bcrypt\");","import { Controller, Get, Post, Put, Delete, Param, Body } from '@nestjs/common';\r\nimport { Neo4jUserService } from './Neo4jUser.service';\r\nimport { User } from '@avans-nx-workshop/shared/api';\r\n\r\n@Controller('users')\r\nexport class UserController {\r\n  constructor(private readonly neo4jService: Neo4jUserService) {}\r\n\r\n  @Get()\r\n  async getAllUsers() {\r\n    const users = await this.neo4jService.getAll();\r\n    return users;\r\n  }\r\n\r\n  @Get(':Id')\r\n  async getOneUser(@Param('Id') Id: string) {\r\n    const user = await this.neo4jService.getOne(Id);\r\n    console.log(\"Id in controller: \", Id);\r\n    console.log(\"controller user: \", user);\r\n    return user;\r\n  }\r\n  \r\n\r\n\r\n  @Post()\r\n  async createUser(@Body() newUser: User) {\r\n    const createdUser = await this.neo4jService.create(newUser);\r\n    return createdUser;\r\n  }\r\n\r\n  @Put(':Id')\r\n  async updateUser(@Param('Id') Id: string, @Body() updatedUser: Pick<User, 'firstName' | 'lastName' | 'image' | 'emailAddress' | 'dateOfBirth' | 'gender' | 'role' | 'friends'>) {\r\n    const result = await this.neo4jService.update(Id, updatedUser);\r\n    return result;\r\n  }\r\n\r\n  @Delete(':Id')\r\n  async deleteUser(@Param('Id') Id: string) {\r\n    const result = await this.neo4jService.delete(Id);\r\n    return result;\r\n  }\r\n}\r\n","import { Controller, Get } from '@nestjs/common';\n\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getData() {\n    return this.appService.getData();\n  }\n}\n","import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getData(): { message: string } {\n    return { message: 'Hello API' };\n  }\n}\n","export * from './lib/environment.development';\r\n","import { IEnvironment } from \"./environment.interface\";\r\n\r\nexport const environment: IEnvironment = {\r\n    production: false,\r\n    apiUrl: 'mongodb://localhost:27017/avans-nx-workshop',\r\n    MONGO_DB_CONNECTION_STRING: 'mongodb://localhost:27017/avans-nx-workshop',\r\n    NEO4J_SCHEME: 'neo4j',\r\n    NEO4J_HOST: 'localhost',\r\n    NEO4J_PORT: '7687',\r\n    NEO4J_USERNAME: 'neo4j',\r\n    NEO4J_PASSWORD: 'ticketshop2003',\r\n    NEO4J_DATABASE: 'TicketShopUsers',\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\n\nimport { AppModule } from './app/app.module';\nimport { CorsOptions } from '@nestjs/common/interfaces/external/cors-options.interface';\nimport { ApiResponseInterceptor } from '@avans-nx-workshop/backend/dto';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n\nconst corsOptions: CorsOptions = {};\napp.enableCors(corsOptions);\napp.useGlobalInterceptors(new ApiResponseInterceptor());\n\n  const port = process.env.PORT || 3000;\n  await app.listen(port);\n  Logger.log(\n    `🚀 Application: data-api is running on: http://localhost:${port}/${globalPrefix}`\n  );\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}